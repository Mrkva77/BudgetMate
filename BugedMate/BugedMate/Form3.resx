<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAApoAAAF3CAYAAAAFPus+AAAABGdBTUEAALGPC/xhBQAAFJZJREFUeF7t
        3VeQXfd92HGKjC0pjpMHiyM5mYnGeYjimTRnMs6MM6NxMpmYTmLTcUZ2pHFsUYoVxZJYhpRYQBJdqEQl
        ARAAUYje+y7Koiw6iLrYvnfv3XK3YgsW2/sv5yxWymsmbyA+H8wfe8657Tx+53/aMwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA8ESIiOcizv+t/zvS9fjC9MsAAPD/Lt957x80P7j3O9m2q/8l01r0o3xP8fc7B2//ae94yR93
        j5f80cOhu7/fMXzvH3cMVP39joGK3+zvz321LzLP90b1V7q7s38vIv/lJEafnf46AAB45pmHQxVfr6y7
        8P792qJr1yuPtheX7Zy8VLNz8kLZ1omzZVsmLlbsmLhctWviVt2RifvNJyfuNByfuNd4cqyspaizsr34
        fqbj8rna7uvrG3tvvZEfuPOHPaMl/6ql7/ZvR7T87emfAADgadTUc/9b18uPVVW0XOyv6bg2UdJ6Ka7W
        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
        QmCC
</value>
  </data>
</root>