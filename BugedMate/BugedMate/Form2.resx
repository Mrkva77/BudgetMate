<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        i79HxLe/7hPfHrwx+O8ujHT/TfXG+rriprIDu47sufvS1Us/HLxx+d8nrn9n4uEAADBufGr9Ulz63qWR
        S3/aNdb718c/Oj61b7Dr+xEf/svJW/4XPT09vzs0dOH3E319ewkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        /y9961v/A2ms09SF0KtSAAAAAElFTkSuQmCC
</value>
  </data>
</root>